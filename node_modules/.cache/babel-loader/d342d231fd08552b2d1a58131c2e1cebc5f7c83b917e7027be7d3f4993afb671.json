{"ast":null,"code":"var _jsxFileName = \"/home/naveen/Naveen/socket/MY-Chat/Mychat-frontend/src/pages/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport socket from '../socket';\nimport { FaRegPaperPlane } from 'react-icons/fa';\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const username = queryParams.get('username');\n  const room = queryParams.get('room');\n  const [messages, setMessages] = useState([]);\n  const [currentMsg, setCurrentMsg] = useState('');\n  useEffect(() => {\n    const handlereceivemessage = data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    };\n    const handleuserjoin = data => {\n      const user = {\n        username: `${data}`,\n        message: `${data} is connected.`,\n        time: `${new Date().getHours()}:${new Date().getMinutes()}`\n      };\n      setMessages(prevMessages => [...prevMessages, user]);\n    };\n    const handleUserConnectMessage = data => {\n      console.log(data, username);\n      if (data.username === username) {\n        console.log('data......', data);\n        const user = {\n          username: `${data.username}`,\n          message: `${data.username} is connected.`,\n          time: `${new Date().getHours()}:${new Date().getMinutes()}`\n        };\n        setMessages(prevMessages => [...prevMessages, user]);\n      } else {\n        alert(`${username} is already connected.`);\n        navigate('/');\n      }\n    };\n    const handleUserDisconnect = data => {\n      const user = {\n        username: `${data.username}`,\n        message: `${data.username} left the room.`,\n        time: `${new Date().getHours()}:${new Date().getMinutes()}`\n      };\n      setMessages(prevMessages => [...prevMessages, user]);\n    };\n    socket.on('userconnectmessage', handleUserConnectMessage);\n    socket.on('receivemessage', handlereceivemessage);\n    socket.on('userjoin', handleuserjoin);\n    socket.on('userdisconnect', handleUserDisconnect);\n    return () => {\n      socket.off('userconnectmessage', handleUserConnectMessage);\n      socket.off('userdisconnect', handleUserDisconnect);\n    };\n  }, [username, navigate]);\n  const sendMessage = () => {\n    const newMessage = {\n      username: username,\n      room: room,\n      message: currentMsg,\n      time: `${new Date().getHours()}:${new Date().getMinutes()}`\n    };\n    socket.emit('sendMessage', newMessage);\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setCurrentMsg('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-container ${msg.username === username ? \"left\" : \"right\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-message\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msg-other\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"sendmessage\",\n        id: \"sendmessage\",\n        value: currentMsg,\n        onKeyPress: event => event.key === \"Enter\" && sendMessage(event),\n        onChange: e => setCurrentMsg(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"send-button\",\n        children: /*#__PURE__*/_jsxDEV(FaRegPaperPlane, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"hAWTiNSlQpyZW+M6j7wgLXvTCag=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","socket","FaRegPaperPlane","jsxDEV","_jsxDEV","Chat","_s","navigate","location","queryParams","URLSearchParams","search","username","get","room","messages","setMessages","currentMsg","setCurrentMsg","handlereceivemessage","data","prevMessages","handleuserjoin","user","message","time","Date","getHours","getMinutes","handleUserConnectMessage","console","log","alert","handleUserDisconnect","on","off","sendMessage","newMessage","emit","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","value","onKeyPress","event","key","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/naveen/Naveen/socket/MY-Chat/Mychat-frontend/src/pages/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport socket from '../socket';\nimport { FaRegPaperPlane } from 'react-icons/fa';\nimport \"../App.css\"\n\nfunction Chat() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const username = queryParams.get('username') ;\n  const room = queryParams.get('room') ;\n\n\n  const [messages, setMessages] = useState([]);\n  const [currentMsg, setCurrentMsg] = useState('');\n\n  useEffect(() => {\n    const handlereceivemessage = (data) => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    }\n    const handleuserjoin = (data) => {\n      const user = {\n        username: `${data}`,\n        message: `${data} is connected.`,\n        time: `${new Date().getHours()}:${new Date().getMinutes()}`\n      };\n\n      setMessages(prevMessages => [...prevMessages, user]);\n    }\n    const handleUserConnectMessage = (data) => {\n      console.log(data, username);\n      if (data.username === username) {\n        console.log('data......', data);\n\n        const user = {\n          username: `${data.username}`,\n          message: `${data.username} is connected.`,\n          time: `${new Date().getHours()}:${new Date().getMinutes()}`\n        };\n\n        setMessages(prevMessages => [...prevMessages, user]);\n      } else {\n        alert(`${username} is already connected.`);\n        navigate('/');\n      }\n    };\n\n    const handleUserDisconnect = (data) => {\n      const user = {\n        username: `${data.username}`,\n        message: `${data.username} left the room.`,\n        time: `${new Date().getHours()}:${new Date().getMinutes()}`,\n      };\n      setMessages(prevMessages => [...prevMessages, user]);\n    };\n\n\n\n\n    socket.on('userconnectmessage', handleUserConnectMessage);\n    socket.on('receivemessage', handlereceivemessage);\n    socket.on('userjoin', handleuserjoin);\n    socket.on('userdisconnect', handleUserDisconnect);\n\n\n\n\n    return () => {\n      socket.off('userconnectmessage', handleUserConnectMessage);\n      socket.off('userdisconnect', handleUserDisconnect);\n    };\n  }, [username, navigate]);\n\n  const sendMessage = () => {\n\n    const newMessage = {\n      username: username,\n      room: room,\n      message: currentMsg,\n      time: `${new Date().getHours()}:${new Date().getMinutes()}`\n    };\n    socket.emit('sendMessage', newMessage);\n\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n\n    setCurrentMsg('');\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message-container ${msg.username === username ? \"left\" : \"right\"}`}>\n            <div className='msg'>\n              <div className='msg-message'>\n                <p>{msg.message}</p>\n              </div>\n              <div className='msg-other'>\n                <p>{msg.username}</p>\n                <p>{msg.time}</p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          name=\"sendmessage\"\n          id=\"sendmessage\"\n          value={currentMsg}\n          onKeyPress={(event) =>\n            event.key === \"Enter\" && sendMessage(event)\n          }\n          onChange={(e) => setCurrentMsg(e.target.value)}\n          className=\"input-field\"\n        />\n        <button onClick={sendMessage} className=\"send-button\">\n          <FaRegPaperPlane />\n        </button>\n      </div>\n    </div>\n  );\n\n\n\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}